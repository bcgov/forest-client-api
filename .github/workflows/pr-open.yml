name: Pull Request Open

on:
  pull_request:

env:
  REGISTRY: ghcr.io
  NAME: nrfc-api

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-validation:
    name: Pull Request Validation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3

      - name: Pull request size and stability labels
        uses: actions/labeler@v4
        continue-on-error: true
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Conventional Label
        uses: bcoe/conventional-release-labels@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignored_types: '["chore","pr"]'
          type_labels: '{"feat": "feature", "fix": "fix", "bug": "fix", "doc": "documentation", "ci": "ci", "chore": "chore", "breaking": "breaking", "BREAKING CHANGE": "breaking"}'

      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ github.head_ref }}

      - name: Conventional Changelog Update
        continue-on-error: true
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ github.token }}
          output-file: 'CHANGELOG.md'
          skip-version-file: 'true'
          skip-commit: 'true'
          git-push: 'false'
          git-branch: refs/heads/${{ github.head_ref }}

      - name: Checkout pr
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Comment PR
        continue-on-error: true
        uses: thollander/actions-comment-pull-request@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          message: |
            # Current changelog
            
            ${{ steps.changelog.outputs.clean_changelog }}
          comment_includes: '# Current changelog'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pr-greeting:
    name: PR Greeting
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: PR Greeting
        uses: bcgov-nr/action-pr-description-add@v0.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---
            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
            [API](https://${{ env.NAME }}-${{ github.event.number }}-backend.${{ env.DOMAIN }}/) available
            
            Once merged, code will be promoted and handed off to following workflow run.
            [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)



  check-backend:
    name: Check Backend
    outputs:
      build: ${{ steps.check.outputs.build }}
    env:
      TRIGGERS: ('src/')
      COMPONENT: backend
      PREV: prod
      ZONE: ${{ github.event.number }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check and process modified files
        id: check
        run: |
          # Fetch main to diff against
          git fetch origin main:refs/remotes/origin/master
          # Trigger build if diff matches any triggers
          TRIGGERS=${{ env.TRIGGERS }}
          while read -r check
          do
              for t in "${TRIGGERS[@]}"; do
                  if [[ "${check}" =~ "${t}" ]]
                  then
                      # Output build=true for next steps
                      echo "::set-output name=build::true"
                      echo -e "${t}\n --> ${check}\n"
                      exit 0
                  fi
              done
          done < <(git diff origin/main --name-only)
          echo "Container build not required"

      - name: Recycle/retag Previous Images
        if: steps.check.outputs.build != 'true'
        uses: shrink/actions-docker-registry-tag@v2
        with:
          registry: ${{ env.REGISTRY }}
          repository: ${{ github.repository }}
          token: ${{ secrets.GHCR_TOKEN }}
          target: ${{ env.PREV }}-${{ env.COMPONENT }}
          tags: |
            ${{ env.ZONE }}-${{ env.COMPONENT }}



  build-backend:
    name: Backend Image Build
    env:
      COMPONENT: backend
      ZONE: ${{ github.event.number }}
    environment:
      name: dev
    runs-on: ubuntu-latest
    needs:
      - check-backend
    if: needs.check-backend.outputs.build == 'true'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: bcgov-nr/action-builder-ghcr@v0.0.3-rc1
        with:
          package: api
          tag: ${{ github.event.number }}
          tag_fallback: test
          token: ${{ secrets.GITHUB_TOKEN }}

  tests-backend:
    name: Backend Unit Tests
    runs-on: ubuntu-22.04
    needs:
      - check-backend
    if: needs.check-backend.outputs.build == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17 and Caching maven dependencies
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Tests
        run: |
          ./mvnw test


  deploy-dev:
    name: DEV Deployment
    needs:
      - build-backend
      - tests-backend
    if: always() && (needs.build-backend.result == 'success')
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    environment:
      name: dev
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.0
        with:
          file: .github/openshift/deploy.backend.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          health_url: health
          parameters:
            -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/api:${{ github.event.number }}
            -p NODE_ENV='development'
            -p ORACLEDB_USER=${{ secrets.ORACLEDB_USER }}
            -p ORACLEDB_PASSWORD=${{ secrets.ORACLEDB_PASSWORD }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}