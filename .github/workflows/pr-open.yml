name: Pull Request Open

on:
  pull_request:

env:
  REGISTRY: ghcr.io
  NAME: nr-forest-client-api
  DOMAIN: apps.silver.devops.gov.bc.ca

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-validation:
    name: Pull Request Validation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3

      - name: Pull request size and stability labels
        uses: actions/labeler@v4
        continue-on-error: true
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Conventional Label
        uses: bcoe/conventional-release-labels@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignored_types: '["chore","pr"]'
          type_labels: '{"feat": "feature", "fix": "fix", "bug": "fix", "doc": "documentation", "ci": "ci", "chore": "chore", "breaking": "breaking", "BREAKING CHANGE": "breaking"}'

      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ github.head_ref }}

      - name: Conventional Changelog Update
        continue-on-error: true
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ github.token }}
          output-file: 'CHANGELOG.md'
          skip-version-file: 'true'
          skip-commit: 'true'
          git-push: 'false'
          git-branch: refs/heads/${{ github.head_ref }}

      - name: Checkout pr
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Comment PR
        continue-on-error: true
        uses: thollander/actions-comment-pull-request@v2
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          message: |
            # Current changelog
            
            ${{ steps.changelog.outputs.clean_changelog }}
          comment_tag: '# Current changelog'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pr-greeting:
    name: PR Greeting
    env:
      PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: PR Greeting
        uses: bcgov-nr/action-pr-description-add@v0.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---
            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
            [API](https://${{ env.NAME }}-${{ github.event.number }}-backend.${{ env.DOMAIN }}/) available
            
            Once merged, code will be promoted and handed off to following workflow run.
            [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

  build-init:
    name: Build Cert Extractor
    runs-on: ubuntu-22.04
    permissions:
      packages: write    
    steps:
      - uses: actions/checkout@v3

      - uses: bcgov-nr/action-builder-ghcr@v1.1.0
        with:
          package: init
          tag: ${{ github.event.number }}
          tag_fallback: test
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: init/

  build-backend:
    name: Backend Image Build
    env:
      COMPONENT: backend
      ZONE: ${{ github.event.number }}
      NAME: ghcr.io/${{ github.repository }}/api:${{ github.event.number }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.0'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build App
        run: |
          cd api
          ./mvnw -Pnative clean spring-boot:build-image \
          -Dspring-boot.build-image.imageName="${{ env.NAME }}" \
          -Doci.revision=${{ github.event.number }}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pushing
        run: docker push ${{ env.NAME }}

  tests-backend:
    name: Backend Unit Tests
    runs-on: ubuntu-22.04
    permissions:
      checks: write
      pull-requests: write
    needs:
      - build-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17 and Caching maven dependencies
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Tests
        run: |
          cd api
          ./mvnw verify -P all-tests checkstyle:checkstyle -Dcheckstyle.skip=false

      - name: Archive CycloneDX
        uses: actions/upload-artifact@v3
        with:
          name: cyclone
          path: api/target/bom.json
          retention-days: 5

      - name: Use Checkstyle report
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          path: 'api/**/checkstyle-result.xml'

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'api/target/**/TEST-*.xml'
          commit: ${{ github.event.pull_request.head.sha }}
          summary: Pull Request Tests
          detailed_summary: true
          job_name: Tests

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: api/target/coverage-reports/merged-test-report/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 75
          min-coverage-changed-files: 75
  
  deploy-init:
    name: Deploy Init
    needs:
      - build-init
    environment: dev
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: init/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          parameters: 
            -p ZONE=${{ github.event.number }} 
            -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/init:${{ github.event.number }}

  deploy-dev:
    name: DEV Deployment
    needs:
      - build-backend
      - tests-backend
      - deploy-init
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    environment:
      name: dev
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      BROKER_URL: https://nr-broker.apps.silver.devops.gov.bc.ca
      VAULT_ADDR: https://vault-iit.apps.silver.devops.gov.bc.ca
    steps:
      - uses: actions/checkout@v3
      - name: Broker
        id: broker
        uses: bcgov-nr/action-vault-broker-approle@v0.0.5
        with:
          broker_jwt: ${{ secrets.BROKER_JWT }}
          provision_role_id: ${{ secrets.PROVISION_ROLE_ID }}
          project_name: client
          app_name: app-client
          environment: development
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault-iit.apps.silver.devops.gov.bc.ca
          token: ${{ steps.broker.outputs.vault_token }}
          exportEnv: 'false'
          secrets: |
            apps/data/dev/client/app-client/db_proxy_read_only db_username | VAULT_DB_USER;
            apps/data/dev/client/app-client/db_proxy_read_only db_password | VAULT_DB_PASS;

      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: api/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          verification_path: /health
          parameters:
            -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/api:${{ github.event.number }}            
            -p ORACLEDB_USER=${{ steps.secrets.outputs.VAULT_DB_USER }}
            -p ORACLEDB_PASSWORD=${{ steps.secrets.outputs.VAULT_DB_PASS }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}

  postman:
    name: Smoke Test
    env:
      COMPONENT: backend
      ZONE: ${{ github.event.number }}
    needs:
      - deploy-dev
    environment:
      name: dev
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      checks: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: matt-ball/newman-action@master
        with:
          collection: postman/FCA.postman_collection.json
          envVar: '[{"key":"URL_FCA","value":"https://${{ env.NAME }}-${{ github.event.number }}-backend.${{ env.DOMAIN }}"}]'
          iterationData: postman/FCA_postman_tests_dev.json
          reporters: '["cli", "junit"]'
          reporter: '{ "junit" : { "export" : "./postman/report.xml" } }'

      - name: Publish Postman Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'postman/report.xml'
          commit: ${{ github.event.pull_request.head.sha }}
          summary: Postman Tests
          detailed_summary: true
          job_name: Postman
