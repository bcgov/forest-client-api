name: Pull Request Open

on:
  pull_request:

env:
  REGISTRY: ghcr.io
  NAME: nr-forest-client-api

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-validation:
    name: Pull Request Validation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3

      - name: Pull request size and stability labels
        uses: actions/labeler@v4
        continue-on-error: true
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Conventional Label
        uses: bcoe/conventional-release-labels@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignored_types: '["chore","pr"]'
          type_labels: '{"feat": "feature", "fix": "fix", "bug": "fix", "doc": "documentation", "ci": "ci", "chore": "chore", "breaking": "breaking", "BREAKING CHANGE": "breaking"}'

      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ github.head_ref }}

      - name: Conventional Changelog Update
        continue-on-error: true
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ github.token }}
          output-file: 'CHANGELOG.md'
          skip-version-file: 'true'
          skip-commit: 'true'
          git-push: 'false'
          git-branch: refs/heads/${{ github.head_ref }}

      - name: Checkout pr
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Comment PR
        continue-on-error: true
        uses: thollander/actions-comment-pull-request@v2
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          message: |
            # Current changelog
            
            ${{ steps.changelog.outputs.clean_changelog }}
          comment_includes: 'message'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pr-greeting:
    name: PR Greeting
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: PR Greeting
        uses: bcgov-nr/action-pr-description-add@v0.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---
            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
            [API](https://${{ env.NAME }}-${{ github.event.number }}-backend.${{ env.DOMAIN }}/) available
            
            Once merged, code will be promoted and handed off to following workflow run.
            [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

  build-backend:
    name: Backend Image Build
    env:
      COMPONENT: backend
      ZONE: ${{ github.event.number }}
    environment:
      name: dev
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: bcgov-nr/action-builder-ghcr@v1.0.0
        with:
          package: api
          build_context: ./
          tag: ${{ github.event.number }}
          tag_fallback: test
          token: ${{ secrets.GITHUB_TOKEN }}

  tests-backend:
    name: Backend Unit Tests
    runs-on: ubuntu-22.04
    needs:
      - build-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17 and Caching maven dependencies
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Tests
        run: ./mvnw verify -P all-tests checkstyle:checkstyle -Dcheckstyle.skip=false

      - name: Archive CycloneDX
        uses: actions/upload-artifact@v3
        with:
          name: cyclone
          path: target/bom.json
          retention-days: 5

      - name: Use Checkstyle report
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          path: '**/checkstyle-result.xml'

  deploy-dev:
    name: DEV Deployment
    needs:
      - build-backend
      - tests-backend
    if: always() && (needs.build-backend.result == 'success') && github.actor != 'dependabot[bot]'
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    environment:
      name: dev
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
    steps:
      - uses: actions/checkout@v3

      - name: Vault Broker
        id: broker
        run: |
          # Read the intention file and replace the event url and the user id
          PAYLOAD=$(cat .github/openshift/intention.json | \
              jq ".event.url=\"$GITHUB_SERVER_URL$GITHUB_ACTION_PATH\" | \
              .user.id=\"$GITHUB_ACTOR\"")

          # Open an intention to the broker
          #INTENTION=$(curl -s -X POST https://nr-broker.apps.silver.devops.gov.bc.ca/v1/intention/open \
          #    -H 'Content-Type: application/json' \
          #    -H "Authorization: Bearer ${{ secrets.BROKER_JWT }}" \
          #    --data-raw $PAYLOAD)
          
          # Extract both the action and the intention token
          #INTENTION_TOKEN=$(echo $INTENTION | jq -r '.token')
          #ACTION_TOKEN=$(echo $INTENTION | jq -r '.actions.provision.token')
          
          # With the action token in hand, provision a secret id for our app role
          #WRAPPED_DATA=$(curl -s -X POST https://nr-broker.apps.silver.devops.gov.bc.ca/v1/provision/approle/secret-id \
          #    -H 'x-broker-token: '"$ACTION_TOKEN"'' \
          #    -H 'x-vault-role-id: '"${{ secrets.PROVISION_ROLE_ID }}"'')
          #WRAPPED_TOKEN=$(echo $WRAPPED_DATA | jq -r '.wrap_info.token')
          
          # Unwrap the token to get the secret id
          #SECRET_ID=$(curl -s -X PUT https://vault-iit.apps.silver.devops.gov.bc.ca/v1/sys/wrapping/unwrap \
          #  -H "X-Vault-Request: true" \
          #  -H "X-Vault-Token: '"$WRAPPED_VAULT_TOKEN"'")
          
          # Log into vault using the app role url, this will give us back the vault token we need to read the secrets
          #LOGIN=$(curl -s -X POST https://vault-iit.apps.silver.devops.gov.bc.ca/v1/auth/vs_apps_approle/login \
          #    --data-raw '{ "role_id": "'$PROVISION_ROLE_ID'", "secret_id": "'$SECRET_ID'" }' \
          #    --header 'Content-Type: application/json' | jq -r '.auth.client_token')
          
          # Close the broker intention
          #curl -s -X POST https://nr-broker.apps.silver.devops.gov.bc.ca/v1/intention/close \
          #    -H 'Content-Type: application/json' \
          #    -H "x-broker-token: $INTENTION_TOKEN"
          
          # Forward the vault token to be consumed
          #echo VAULT_TOKEN=${LOGIN} >> $GITHUB_OUTPUT

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault-iit.apps.silver.devops.gov.bc.ca
          token: ${{ steps.broker.outputs.VAULT_TOKEN }}
          exportEnv: 'false'
          secrets: |
            apps/data/dev/client/app-client/db_proxy_read_only db_username | VAULT_DB_USER;
            apps/data/dev/client/app-client/db_proxy_read_only db_password | VAULT_DB_PASS;

      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: .github/openshift/deploy.backend.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          verification_path: /health
          parameters:
            -p ZONE=${{ github.event.number }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/api:${{ github.event.number }}
            -p NODE_ENV='development'
            -p ORACLEDB_USER=${{ steps.secrets.outputs.VAULT_DB_USER }}
            -p ORACLEDB_PASSWORD=${{ steps.secrets.outputs.VAULT_DB_PASS }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}