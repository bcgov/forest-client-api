name: Merge to Main

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  NAME: ${{ github.event.repository.name }}
  NS: nr-d2723f

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:

  codeql:
    name: Semantic Code Analysis
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Set up JDK 17 and Caching maven dependencies
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Build for Java
        run: ./mvnw clean package

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  sonarcloud:
    name: Static Analysis
    runs-on: ubuntu-22.04
    steps:
      - uses: bcgov-nr/action-test-and-analyse-java@v0.1.0
        with:
          commands: |
            mvn -B verify -P all-tests checkstyle:checkstyle -Dcheckstyle.skip=false --file pom.xml
          dir: .
          java-cache: maven
          java-distribution: temurin
          java-version: "17"
          sonar_args: >
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=bcgov_forest-client-api
          sonar_project_token: ${{ secrets.SONAR_TOKEN }}

  trivy-repo:
    name: Repository Report
    needs:
      - codeql
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.9.2
        with:
          scan-type: "fs"
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"
          security-checks: "vuln,secret,config"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

  deploy-test:
    name: TEST Deployment
    needs:
      - trivy-repo
      - sonarcloud
    runs-on: ubuntu-22.04
    environment:
      name: test
    env:
      ZONE: test
      DOMAIN: apps.silver.devops.gov.bc.ca
    steps:
      - uses: actions/checkout@v3
      - name: Broker
        id: broker
        uses: bcgov-nr/action-vault-broker-approle@v0.0.5
        with:
          broker_jwt: ${{ secrets.BROKER_JWT }}
          provision_role_id: ${{ secrets.PROVISION_ROLE_ID }}
          project_name: client
          app_name: app-client
          environment: test
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault-iit.apps.silver.devops.gov.bc.ca
          token: ${{ steps.broker.outputs.vault_token }}
          exportEnv: 'false'
          secrets: |
            apps/data/test/client/app-client/db_proxy_read_only db_username | VAULT_DB_USER;
            apps/data/test/client/app-client/db_proxy_read_only db_password | VAULT_DB_PASS;
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          verification_path: /health
          penetration_test: true
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/api:${{ env.ZONE }}            
            -p ORACLEDB_USER=${{ steps.secrets.outputs.VAULT_DB_USER }}
            -p ORACLEDB_PASSWORD=${{ steps.secrets.outputs.VAULT_DB_PASS }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}
            -p ORACLEDB_SECRET=${{ secrets.ORACLEDB_SECRET }}
      - name: Publish API
        uses: bcgov-nr/action-gwa-publish@v0.1.0
        with:
          namespace: ${{ env.NS }}
          client_id: ${{ secrets.GWA_ACCT_ID }}
          client_secret: ${{ secrets.GWA_ACCT_SECRET }}
          file: .github/gwa/service-test.yaml

      - name: Postman Smoke Test on Openshift
        uses: matt-ball/newman-action@master
        with:
          collection: postman/FCA.postman_collection.json
          envVar: '[{"key":"URL_FCA","value":"https://${{ env.NAME }}-test-backend.${{ env.DOMAIN }}"}]'
          reporters: '["cli"]'
          folder: '["general"]'

      - name: Postman Smoke Test on API Gateway
        uses: matt-ball/newman-action@master
        with:
          collection: postman/FCA.postman_collection.json
          envVar: '[{"key":"URL_FCA","value":"https://${{ env.NAME }}-test.api.gov.bc.ca"}]'
          reporters: '["cli"]'
          folder: '["general"]'

  deploy-prod:
    name: PROD Deployment
    needs:
      - deploy-test
    runs-on: ubuntu-22.04
    environment:
      name: prod
    env:
      ZONE: prod
      PREV: test
      DOMAIN: apps.silver.devops.gov.bc.ca
    steps:
      - uses: actions/checkout@v3
      - name: Broker
        id: broker
        uses: bcgov-nr/action-vault-broker-approle@v0.0.5
        with:
          broker_jwt: ${{ secrets.BROKER_JWT }}
          provision_role_id: ${{ secrets.PROVISION_ROLE_ID }}
          project_name: client
          app_name: app-client
          environment: production
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault-iit.apps.silver.devops.gov.bc.ca
          token: ${{ steps.broker.outputs.vault_token }}
          exportEnv: 'false'
          secrets: |
            apps/data/prod/client/app-client/db_proxy_read_only db_username | VAULT_DB_USER;
            apps/data/prod/client/app-client/db_proxy_read_only db_password | VAULT_DB_PASS;
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: /health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/api:${{ env.PREV }}            
            -p ORACLEDB_USER=${{ steps.secrets.outputs.VAULT_DB_USER }}
            -p ORACLEDB_PASSWORD=${{ steps.secrets.outputs.VAULT_DB_PASS }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}
            -p ORACLEDB_SECRET=${{ secrets.ORACLEDB_SECRET }}
      - name: Publish API
        uses: bcgov-nr/action-gwa-publish@v0.1.0
        with:
          namespace: ${{ env.NS }}
          client_id: ${{ secrets.GWA_ACCT_ID }}
          client_secret: ${{ secrets.GWA_ACCT_SECRET }}
          file: .github/gwa/service-prod.yaml

      - name: Postman Smoke Test on Openshift
        uses: matt-ball/newman-action@master
        with:
          collection: postman/FCA.postman_collection.json
          envVar: '[{"key":"URL_FCA","value":"https://${{ env.NAME }}-prod-backend.${{ env.DOMAIN }}"}]'
          reporters: '["cli"]'
          folder: '["general"]'

      - name: Postman Smoke Test on API Gateway
        uses: matt-ball/newman-action@master
        with:
          collection: postman/FCA.postman_collection.json
          envVar: '[{"key":"URL_FCA","value":"https://${{ env.NAME }}-prod.api.gov.bc.ca"}]'
          reporters: '["cli"]'
          folder: '["general"]'
