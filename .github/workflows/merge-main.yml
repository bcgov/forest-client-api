name: Merge to Main

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  NAME: nr-forest-client-api
  NS: nr-d2723f

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:

  codeql:
    name: Semantic Code Analysis
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Set up JDK 17 and Caching maven dependencies
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Build for Java
        run: ./mvnw clean package

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  sonarcloud:
    name: Static Analysis
    runs-on: ubuntu-22.04
    steps:
      - uses: bcgov-nr/action-test-and-analyse-java@v0.1.0
        with:
          commands: |
            mvn -B verify -P all-tests checkstyle:checkstyle -Dcheckstyle.skip=false --file pom.xml
          dir: .
          java-cache: maven
          java-distribution: temurin
          java-version: "17"
          sonar_args: >
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=bcgov_forest-client-api
          sonar_project_token: ${{ secrets.SONAR_TOKEN }}

  deploy-test:
    name: TEST Deployment
    needs:
      - codeql
      - sonarcloud
    runs-on: ubuntu-22.04
    environment:
      name: test
    env:
      ZONE: test
    steps:
      - uses: actions/checkout@v3
      - name: Broker
        id: broker
        uses: bcgov-nr/action-vault-broker-approle@v0.0.4
        with:
          broker_jwt: ${{ secrets.BROKER_JWT }}
          provision_role_id: ${{ secrets.PROVISION_ROLE_ID }}
          project_name: client
          app_name: app-client
          environment: development
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault-iit.apps.silver.devops.gov.bc.ca
          token: ${{ steps.broker.outputs.vault_token }}
          exportEnv: 'false'
          secrets: |
            apps/data/test/client/app-client/db_proxy_read_only db_username | VAULT_DB_USER;
            apps/data/test/client/app-client/db_proxy_read_only db_password | VAULT_DB_PASS;
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: .github/openshift/deploy.backend.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          verification_path: /health
          penetration_test: true
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/api:${{ env.ZONE }}
            -p NODE_ENV='development'
            -p API_URL='https://nr-forest-client-api-test.api.gov.bc.ca'
            -p X_API_KEY=${{ secrets.GWA_X_API_KEY }}
            -p ORACLEDB_USER=${{ steps.secrets.outputs.VAULT_DB_USER }}
            -p ORACLEDB_PASSWORD=${{ steps.secrets.outputs.VAULT_DB_PASS }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}

  # https://github.com/marketplace/actions/aqua-security-trivy
  trivy-repo:
    name: Repository Report
    needs:
      - codeql
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.8.0
        with:
          scan-type: "fs"
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"
          security-checks: "vuln,secret,config"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

  deploy-prod:
    name: PROD Deployment
    needs:
      - trivy-repo
    runs-on: ubuntu-22.04
    environment:
      name: prod
    env:
      ZONE: prod
      PREV: test
    steps:
      - uses: actions/checkout@v3
      - name: Broker
        id: broker
        uses: bcgov-nr/action-vault-broker-approle@v0.0.4
        with:
          broker_jwt: ${{ secrets.BROKER_JWT }}
          provision_role_id: ${{ secrets.PROVISION_ROLE_ID }}
          project_name: client
          app_name: app-client
          environment: production
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault-iit.apps.silver.devops.gov.bc.ca
          token: ${{ steps.broker.outputs.vault_token }}
          exportEnv: 'false'
          secrets: |
            apps/data/prod/client/app-client/db_proxy_read_only db_username | VAULT_DB_USER;
            apps/data/prod/client/app-client/db_proxy_read_only db_password | VAULT_DB_PASS;
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: /health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/api:${{ env.PREV }}
            -p NODE_ENV='production'
            -p API_URL='https://nr-forest-client-api-prod.api.gov.bc.ca'
            -p X_API_KEY=${{ secrets.GWA_X_API_KEY }}
            -p ORACLEDB_USER=${{ steps.secrets.outputs.VAULT_DB_USER }}
            -p ORACLEDB_PASSWORD=${{ steps.secrets.outputs.VAULT_DB_PASS }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}

  publish-api:
    name: Publish Api
    needs:
      - deploy-test
      - deploy-prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 10
          TOKEN: ${ secrets.GITHUB_TOKEN }

      - name: Get GWA Command Line
        run: |
          curl -L -O https://github.com/bcgov/gwa-cli/releases/download/v1.3.1/gwa_v1.3.1_linux_x64.zip
          unzip gwa_v1.3.1_linux_x64.zip
          export PATH=`pwd`:$PATH

      - name: Apply Namespace Configuration
        run: |
          export PATH=`pwd`:$PATH
          cd .github/gwa

          gwa init -P \
            --namespace=${{ env.NS }} \
            --client-id=${{ secrets.GWA_ACCT_ID }} \
            --client-secret=${{ secrets.GWA_ACCT_SECRET }}

          gwa pg service-test.yaml
          gwa pg service-prod.yaml
